{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","Content","Footer","App","className","style","minHeight","theme","mode","defaultSelectedKeys","Item","padding","background","margin","name","onFinish","values","console","log","fetch","method","headers","body","JSON","stringify","then","response","catch","error","label","type","htmlType","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGQA,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QAASC,EAAWF,IAAXE,OA+DVC,MA7Df,WAgBE,OACE,eAAC,IAAD,CAAQC,UAAU,SAASC,MAAO,CAAEC,UAAW,SAA/C,UACE,eAACP,EAAD,WACE,qBAAKK,UAAU,SACf,eAAC,IAAD,CAAMG,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAA3D,UACE,cAAC,IAAKC,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,KACf,cAAC,IAAKA,KAAN,mBAAe,WAGnB,eAACT,EAAD,CACEI,MAAO,CAAEM,QAAS,UAAWC,WAAY,QAASC,OAAQ,QAD5D,UAGE,eAAC,IAAD,CAAYR,MAAO,CAAEQ,OAAQ,UAA7B,UACE,cAAC,IAAWH,KAAZ,mBACA,cAAC,IAAWA,KAAZ,mBACA,cAAC,IAAWA,KAAZ,qBAEF,eAAC,IAAD,CAAMI,KAAK,QAAQC,SAjCR,SAACC,GAChBC,QAAQC,IAAIF,GACZG,MAAM,OAAQ,CACZC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUR,KAEpBS,MAAK,SAAUC,GACdT,QAAQC,IAAIQ,MAEbC,OAAM,SAAUC,GACfX,QAAQC,IAAIU,OAsBZ,UACE,cAAC,IAAKlB,KAAN,CAAWmB,MAAM,QAAQf,KAAK,QAA9B,SACE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,CAAWmB,MAAM,cAAcf,KAAK,cAApC,SACE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,CAAWmB,MAAM,SAASf,KAAK,SAA/B,SACE,cAAC,IAAD,MAGF,cAAC,IAAKJ,KAAN,UACE,cAAC,IAAD,CAAQoB,KAAK,UAAUC,SAAS,SAAhC,4BAMN,cAAC7B,EAAD,CAAQG,MAAO,CAAE2B,UAAW,UAA5B,wDC/CSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9176064.chunk.js","sourcesContent":["import { Layout, Menu, Breadcrumb, Form, Input, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const onFinish = (values) => {\n    console.log(values);\n    fetch(\"/api\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(values),\n    })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Layout className=\"layout\" style={{ minHeight: \"100vh\" }}>\n      <Header>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]}>\n          <Menu.Item key=\"1\">nav 1</Menu.Item>\n          <Menu.Item key=\"2\">nav 2</Menu.Item>\n          <Menu.Item key=\"3\">nav 3</Menu.Item>\n        </Menu>\n      </Header>\n      <Content\n        style={{ padding: \"0 50px,\", background: \"White\", margin: \"20px\" }}\n      >\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>List</Breadcrumb.Item>\n          <Breadcrumb.Item>App</Breadcrumb.Item>\n        </Breadcrumb>\n        <Form name=\"basic\" onFinish={onFinish}>\n          <Form.Item label=\"Title\" name=\"title\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item label=\"Description\" name=\"description\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item label=\"Author\" name=\"author\">\n            <Input />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>\n        Ant Design Â©2018 Created by Ant UED\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}